@page "/counter"
@using PlayAdvBlazor.Clients.AdventureServer;
@inject IAdventureServerClient _client

<h1>Play Adventure</h1>


@if (MoveResult == null)
{
    <p><em>Initializing New Game Loading...</em></p>
}
else
{

    <br />
    @MoveResult.RoomName
    <br />
    <hr />
    @MoveResult.RoomMessage
    <br />
    <br />
    @MoveResult.ItemsMessage
    <br />
    <br />
    <input type="text"  @onkeydown="@EnterMove" @bind="@GameMove" />

}



@code {


    private string GameMove { get; set; } // use property to support the bind-value getting and setting the value

    private int GameSelecton = 1;

    public GameMoveResult MoveResult = new GameMoveResult();

    protected override async Task OnInitializedAsync()
    {
        // If a Game has not been started then this will initialize the game and save the move

        MoveResult = _client.RestoreLastMove();
        GameMove = "";

        if (MoveResult.InstanceID == null)
        {
            MoveResult = await _client.StartAdventureAsync(GameSelecton);
            _client.SaveLastMove(MoveResult);
        }


    }


    private async Task EnterMove(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            MoveResult = await _client.PlayGameAsync(MoveResult.InstanceID, GameMove);
            _client.SaveLastMove(MoveResult);
        }


    }


}
